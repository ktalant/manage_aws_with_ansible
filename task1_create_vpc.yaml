- name: EC2 creates VPC  
  hosts: localhost
  connection: local
  gather_facts: false
  become: yes
  become_method: sudo
  tasks:

# ------------------VPC CREATION STARTS HERE-------------------

    - name: create VPC with tags
      ec2_vpc_net:
        name: "{{name_of_VPC}}"
        cidr_block: 10.0.0.0/16
        region: "{{region}}"
        tags:
          name: "{{name_of_VPC}}"
        tenancy: default

# ------------------VPC GATHER FACTS-------------------

    - name: gather facts to get vpc_id of "{{name_of_VPC}}"
      ec2_vpc_net_facts:
        region: "{{region}}"
        filters: 
          "tag:Name": "{{name_of_VPC}}"
      register: my_vpc_info
      

    - name: Display VPC facts(information)
      debug:
        var: my_vpc_info.vpcs[0].vpc_id



# ------------------PUBLIC-SUBNET-STARTS HERE-------------------
# ------------------PUBLIC-SUBNET-1 -------------------

    - name: Create subnet in "{{name_of_VPC}}"
      ec2_vpc_subnet:
        region: "{{region}}"
        az: "{{az1}}"
        state: present
        vpc_id: "{{my_vpc_info.vpcs[0].vpc_id}}"
        cidr: 10.0.1.0/24
        map_public: true
        resource_tags:
          Name: my_public_subnet_1   


# ------------------PUBLIC-SUBNET-2-------------------
    - name: Create subnet in "{{name_of_VPC}}"
      ec2_vpc_subnet:
        region: "{{region}}"
        az: "{{az2}}"
        state: present
        vpc_id: "{{my_vpc_info.vpcs[0].vpc_id}}"
        cidr: 10.0.2.0/24
        map_public: true
        resource_tags:
          Name: my_public_subnet_2


# ------------------PUBLIC-SUBNET-3-------------------
    - name: Create subnet in "{{name_of_VPC}}"
      ec2_vpc_subnet:
        region: "{{region}}"
        az: "{{az3}}"
        state: present
        vpc_id: "{{my_vpc_info.vpcs[0].vpc_id}}"
        cidr: 10.0.3.0/24
        map_public: true
        resource_tags:
          Name: my_public_subnet_3
# ------------------PUBLIC-SUBNET-ENDS HERE-------------------

# ------------------GATHER FACTS TO GET PUBLIC-SUBNET-IDS-------------------
    - name: Gather Facts of subnets to get subnet IDs 
      ec2_vpc_subnet_facts:
        region: "{{region}}"
        filters:
          "tag:Name": "{{ item }}"
      with_items:
        - my_public_subnet_1
        - my_public_subnet_2
        - my_public_subnet_3
      register: subnet_facts1

    - set_fact:
        subnet_ids1: "{{ subnet_facts1.results|map(attribute='subnets.0.id')|list }}"
    - debug:
        var: subnet_ids1

# ------------------create IGW and attach to new created VPC-------------------
    - name: create an IGW to "{{name_of_VPC}}"
      ec2_vpc_igw:
        region: "{{region}}"
        vpc_id: "{{my_vpc_info.vpcs[0].vpc_id}}"
        state: present
        resource_tags:
          Name: "{{name_of_VPC}}"
      register: igw

# ------------------create Public-Route-Table for public subnets-------------------
    - name: Set up public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{my_vpc_info.vpcs[0].vpc_id}}"
        region: "{{region}}"
        tags:
          Name: Public-Route-Table
        subnets:
          - "{{subnet_ids1[0]}}"
          - "{{subnet_ids1[1]}}"
          - "{{subnet_ids1[2]}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
      register: public_route_table

# ------------------PRIVATE-SUBNET-STARTS HERE-------------------
# ------------------PRIVATE-SUBNET-1 -------------------

    - name: Create subnet in "{{name_of_VPC}}"
      ec2_vpc_subnet:
        region: "{{region}}"
        az: "{{az1}}"
        state: present
        vpc_id: "{{my_vpc_info.vpcs[0].vpc_id}}"
        cidr: 10.0.11.0/24
        resource_tags:
          Name: my_private_subnet_1   


# ------------------PRIVATE-SUBNET-2-------------------
    - name: Create subnet in "{{name_of_VPC}}"
      ec2_vpc_subnet:
        region: "{{region}}"
        az: "{{az2}}"
        state: present
        vpc_id: "{{my_vpc_info.vpcs[0].vpc_id}}"
        cidr: 10.0.12.0/24
        resource_tags:
          Name: my_private_subnet_2


# ------------------PRIVATE-SUBNET-3-------------------
    - name: Create subnet in "{{name_of_VPC}}"
      ec2_vpc_subnet:
        region: "{{region}}"
        az: "{{az3}}"
        state: present
        vpc_id: "{{my_vpc_info.vpcs[0].vpc_id}}"
        cidr: 10.0.13.0/24
        resource_tags:
          Name: my_private_subnet_3
# ------------------PUBLIC-SUBNET-ENDS HERE-------------------
# ------------------GATHER FACTS TO GET PRIVATE-SUBNET-IDS-------------------
    - name: Gather Facts of subnets to get subnet IDs 
      ec2_vpc_subnet_facts:
        region: "{{region}}"
        filters:
          "tag:Name": "{{ item }}"
      with_items:
        - my_private_subnet_1
        - my_private_subnet_2
        - my_private_subnet_3
      register: subnet_facts2

    - set_fact:
        subnet_ids2: "{{ subnet_facts2.results|map(attribute='subnets.0.id')|list }}"
    - debug:
        var: subnet_ids2

# ------------------create PRIVATE-Route-Table for public subnets-------------------
    - name: Set up private subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{my_vpc_info.vpcs[0].vpc_id}}"
        region: "{{region}}"
        tags:
          Name: Private-Route-Table
        subnets:
          - "{{subnet_ids2[0]}}"
          - "{{subnet_ids2[1]}}"
          - "{{subnet_ids2[2]}}"
        routes:
          - dest: 10.0.0.0/16
      register: private_route_table